@model IdentityProfileApp.Domain.Entities.ViewModels.ArticleWithImage
@using IdentityProfileApp.Domain.Entities.Enums;
@using IdentityProfileApp.Web.StaticClasses;
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm("Create", "Article", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Article</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Article.Header, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Article.Header, new { @class = "form-control", id = "header" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Article.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Article.Summary, new { @class = "form-control", id = "summary" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Article.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Article.Body, new { @class = "texter", id = "body" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Article.Footer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Article.Footer, new { @class = "texter", id = "footer" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => Model.Article.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Article.CategoryId, TempData["categories"] == null ? new List<SelectListItem>() : (IEnumerable<SelectListItem>)TempData["categories"], "Kategori Seçiniz", htmlAttributes: new
               {
                   @class = "form-control",
                   id = "category"
               })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Article.VideoSource, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Article.VideoSource, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostedImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.PostedImage)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</body>
</html>

@section scripts{

    @Scripts.Render("~/Admin/ckEditor")
    @Scripts.Render("~/Admin/cropper/js")
    @Scripts.Render("~/Admin/Select2/js")
    <script type="text/javascript">
        $("textarea.texter").each(function () {
            $.CK($(this).attr('id').toString(), '@Url.Content("~/Areas/Admin/Content/plugins/ck/ckfinder/")');
        });
        //kırpma işlemine ait fonksiyon
        $("#PostedImage").on("change", () => {
            UploadImage(525 / 350, 'PostedImage');
        });

        $.Select("category","Seçiniz");

    </script>
}
@section styles{
    @Styles.Render("~/Admin/cropper/css")
    @Styles.Render("~/Admin/Select2/css")
}