@model IdentityProfileApp.Domain.Entities.ViewModels.UserVM
@{ 
    ViewBag.Title = "Kullanıcı Ekle";
}
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
</head>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(model => model.User.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Surname, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.MobileTelNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.MobileTelNo, new { htmlAttributes = new { @class = "form-control", @id = "phone" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.EmailAdress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.EmailAdress, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserRoles, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @for (int i = 0; i < Model.UserRoles.Count; i++)
            {
                @Html.HiddenFor(m => m.UserRoles[i].RoleId)
                @Html.HiddenFor(m => m.UserRoles[i].RoleName)
                @Html.CheckBoxFor(m => m.UserRoles[i].IsChecked) @:&nbsp; @Model.UserRoles[i].RoleName
            }

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(m => m.User.Gender, "Seçiniz", new { @class = "form-control " })
        </div>
    </div>
</div>

    <div class="row form-group">
        <div class="col-md-offset-2 col-2">
            <input type="submit" class="btn btn-success form-control" value="Kaydet" />
        </div>
        <div>
            <a href="@Url.Action("List","User")" class="btn btn-info">Kullanıcı listesine Dön &nbsp;<i class="fas fa-undo"></i></a>
        </div>
    </div>

}



@section scripts{

    @Scripts.Render("~/Admin/Mask/js")
    <script>
        //telefon no maskeleme
        $().ready(function () {
            $("#phone").mask("(999) 999-9999");


            $("#phone").on("blur", function () {
                var last = $(this).val().substr($(this).val().indexOf("-") + 1);

                if (last.length == 5) {
                    var move = $(this).val().substr($(this).val().indexOf("-") + 1, 1);

                    var lastfour = last.substr(1, 4);

                    var first = $(this).val().substr(0, 9);

                    $(this).val(first + move + '-' + lastfour);
                }
            });
        });
    </script>
}


