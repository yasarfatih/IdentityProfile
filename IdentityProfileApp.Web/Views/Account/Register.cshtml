@model IdentityProfileApp.Domain.Entities.ViewModels.RegisterVM
@using IdentityProfileApp.Web.StaticClasses
@{
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
<!-- Body Inner -->
<body class="b--desktop breakpoint-xs">
    <div class="body-inner">
        <!-- Section -->
        <section class="fullscreen" data-bg-parallax="/Content/images/pages/1.png">
            <div class="container container-sm">

                <div class="text-middle">
                    <div class="text-center m-b-30">
                        <a href="@Url.Action("Index","Home")" class="logo">
                            <img src="~/Content/images/logo-dark.png" alt="Polo Logo">
                        </a>
                    </div>
                    <div class="row">
                        <div class="col-lg-4 center p-40 background-white b-r-6">
                            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-transparent-grey needs-validation", id = "register", novalidate = "false" }))
                            {
                                <div class="row">
                                    <div class="col-lg-12">
                                        <h3>Register New Account</h3>
                                        <p>Create an account by entering the information below. If you are a returning customer please login at the top of the page.</p>
                                    </div>
                                    <div class="col-lg-12 form-group ">
                                        <label class="sr-only">First Name</label>
                                        @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(m => m.User.Name), style = "text-align:left;cursor:auto" } })
                                        <div class="invalid-feedback">
                                            @Html.ValidationMessageFor(model => model.User.Name)
                                        </div>
                                    </div>
                                    <div class="col-lg-12 form-group">
                                        <label class="sr-only">Last Name</label>
                                        @Html.EditorFor(model => model.User.Surname, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(m => m.User.Surname), style = "text-align:left;cursor:auto", required = "true", maxlength = "30" } })

                                    </div>
                                    <br />
                                    <div class="col-lg-12 form-group">
                                        <label class="label_radio col-lg-6">
                                            @Html.RadioButtonFor(model => model.User.Gender, 1, new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                                            <span>Erkek</span>
                                        </label>
                                        <label class="label_radio col-lg-6">
                                            @Html.RadioButtonFor(model => model.User.Gender, 2, new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                                            <span>Kadın</span>
                                        </label>
                                    </div>
                                    <br />
                                    <div class="col-lg-12 form-group">
                                        <label class="sr-only">Username</label>
                                        @Html.DropDownListFor(model => model.User.CityId, CityDistrictStatics.GetCities(), "Şehir Seçiniz...", htmlAttributes: new { @class = "form-control custom-select", required = "true" })
                                        <span class="invalid-feedback">
                                            @Html.ValidationMessageFor(model => model.User.Name)
                                        </span>
                                    </div>
                                    <div class="col-lg-12 form-group">
                                        <label class="sr-only">Password</label>
                                        @Html.DropDownListFor(model => model.User.DistrictId, new List<SelectListItem>(), "İlçe Seçiniz...", htmlAttributes: new { @class = "form-control custom-select", required = "false" })
                                        <span class="invalid-feedback">
                                            @Html.ValidationMessageFor(model => model.User.Name)
                                        </span>
                                    </div>

                                    <div class="col-lg-12 form-group">
                                        <p style="text-align:center"> Hesap bilgilerinizi aşağıya giriniz</p>
                                    </div>
                                    <br />
                                    <div class="col-lg-12 form-group">
                                        <label class="sr-only">Apartment, suite, unit etc.</label>
                                        @Html.EditorFor(model => model.User.EmailAdress, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(m => m.User.EmailAdress), style = "text-align:left;cursor:auto" } })
                                    </div>
                                    <div class="col-lg-12 form-group">
                                        <label class="sr-only">Town / City</label>
                                        @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(m => m.User.Password), style = "text-align:left;cursor:auto", type = "password" } })
                                    </div>
                                    <div class="col-lg-12 form-group">
                                        <label class="sr-only">State / County</label>
                                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(m => m.ConfirmPassword), style = "text-align:left;cursor:auto", type = "password" } })
                                    </div>
                                    <div class="col-lg-12 form-group">
                                        <button class="btn" type="submit">Register New Account </button>
                                        <button type="button" class="btn btn-danger m-l-10">Cancel</button>
                                    </div>
                                </div>
                            }
                            <p class="small">
                                Hesabınız mı var? <a href="@Url.Action("Login","Account")">Giriş Yap</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
    <a id="scrollTop" style="bottom: 16px; opacity: 0;"><i class="icon-chevron-up"></i><i class="icon-chevron-up"></i></a>
</body>
@section scripts{
    <script>
        $().ready(function () {
            if ($("#User_CityId").val() !== null) {
                $("#User_CityId").trigger("change");
            }
            $("#User_CityId").change(function () {
                var id = $('#User_CityId option:selected').val();
            $.ajax(
                {
                    url: '@Url.Action("GetDistricts", "Account")',
                    type: 'GET',
                    data: { id: id },
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        var select = $("#User_DistrictId");
                        var htmlOptions = [];
                        if (data.length) {
                            for (var i = -1; i < data.length ; i++) {
                                if (i==-1) {
                                    html = '<option value="' + -1 + '">' + "İlçe Seçiniz..." + '</option>';
                                }
                                else {
                                    html = '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                                }
                                htmlOptions[htmlOptions.length] = html;
                            }
                            select.empty().append(htmlOptions.join(''));
                        }
                    },
                    error: function () {

                    }
                });
            })
    })
    </script>
}





